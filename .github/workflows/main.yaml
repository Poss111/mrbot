name: Build Mr Bot

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage

    - name: Lint with flake8
      uses: actions/github-script@v7
      id: lint
      with: 
        result-encoding: string
        script: |
          const { execSync } = require('child_process');
          try {
            const result = execSync('flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics && flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics', { encoding: 'utf-8' });
            return result;
          } catch (error) {
            return error.stdout;
          }
      continue-on-error: true

    - name: Generate coverage report
      uses: actions/github-script@v7
      id: coverage
      with: 
        result-encoding: string
        script: |
          const { execSync } = require('child_process');
          try {
            const result = execSync('coverage run -m pytest', { encoding: 'utf-8' });
            return result;
          } catch (error) {
            return error.stdout;
          }
      continue-on-error: true

    - name: Comment lint results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7.0.1
      with:
        script: |
          const lintOutput = `${{ steps.lint.outputs.result }}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `### Lint Results\n\`\`\`\n${lintOutput}\n\`\`\``
          });

    - name: Comment test results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7.0.1
      with:
        script: |
          const coverageOutput = `${{ steps.coverage.outputs.result }}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Test Results\n\n### Coverage Report\n\`\`\`\n${coverageOutput}\n\`\`\``
          });

    - name: Check if linting failed
      run: if [ ${{ steps.lint.outcome }} -ne 'success' ]; then exit 1; fi

    - name: Check if tests failed
      run: if [ ${{ steps.coverage.outcome }} -ne 'success' ]; then exit 1; fi
      
