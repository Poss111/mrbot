name: Release Build

on:
    workflow_dispatch:
      inputs:
        environment:
          description: "The environment to deploy (e.g., staging, production)"
          required: true
          default: "main - us-east-1"

jobs:
    build:
        runs-on: ubuntu-latest
        environment: ${{ github.event.inputs.environment }}
        permissions:
            id-token: write
            contents: read

        steps:
            - name: Checkout code
              uses: actions/checkout@v4.2.2
              with:
                  fetch-depth: 0

            - uses: olegtarasov/get-tag@v2.1.4
              id: tagName

            - name: Extract repository name
              id: extract_repo_name
              run: |
                  # Extract the repo name (the part after '/')
                  REPO_NAME=$(basename "${GITHUB_REPOSITORY}")
                  echo "Repository Name: $REPO_NAME"
                  
                  # Save the repo name as an environment variable
                  echo "IMAGE_NAME=$REPO_NAME" >> $GITHUB_ENV
                  
            - name: Create Image URI
              id: create_image_uri
              env:
                TAG_NAME: ${{ steps.tagName.outputs.tag }}
              run: |
                  echo "Creating image name and tag"
                  echo "IMAGE_URI=$IMAGE_NAME:$GIT_TAG_NAME" >> $GITHUB_ENV
                  echo "Image URI -> $IMAGE_NAME:$GIT_TAG_NAME"

            - name: Build Docker image
              run: |
                docker build -t ${{ env.IMAGE_URI }} .

            - name: Assume AWS workload identity
              id: assume-role
              uses: aws-actions/configure-aws-credentials@v4.0.2
              with:
                  role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Log in to Amazon ECR
              uses: aws-actions/amazon-ecr-login@v1

            - name: Tag Docker image
              run: |
                    docker tag ${{ env.IMAGE_URI }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_URI }}

            - name: Push Docker image to ECR
              run: |
                    docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_URI }}